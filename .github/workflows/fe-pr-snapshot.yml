name: Frontend Pull Request Snapshot Workflow

on:
  workflow_call:
    inputs:
      GHA_BASE:
        type: string
        required: true
    secrets:
      JFROG_BASE64_TOKEN:
        required: true
      JFROG_URL:
        required: true
      JFROG_USER:
        required: true
      DOT_NPMRC:
        required: true

jobs:
  publish-pr-snapshot:
    if: contains(github.event.pull_request.labels.*.name, 'snapshot')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 22.15.0
      - name: Cache Node Modules
        id: npm-cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Validate and fetch base branch
        run: |
          BASE_BRANCH="${{ inputs.GHA_BASE }}"
          echo "Validating base branch: $BASE_BRANCH"

          if git fetch origin "$BASE_BRANCH:$BASE_BRANCH" 2>/dev/null; then
            echo "✅ Base branch fetched successfully"
            echo "VALIDATED_BASE=$BASE_BRANCH" >> $GITHUB_ENV
          else
            echo "❌ Base branch '$BASE_BRANCH' not found, using default"
            DEFAULT_BRANCH=$(git remote show origin | grep 'HEAD branch' | cut -d' ' -f5)
            git fetch origin "$DEFAULT_BRANCH:$DEFAULT_BRANCH"
            echo "VALIDATED_BASE=$DEFAULT_BRANCH" >> $GITHUB_ENV
          fi

      - name: Use .npmrc
        uses: bduff9/use-npmrc@v1.1
        with:
          dot-npmrc: ${{ secrets.DOT_NPMRC }}

      - name: Install modules
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build and Push to Jfrog NPM Registry
        uses: collaborationFactory/github-actions/.github/actions/artifacts@master
        env:
          JFROG_BASE64_TOKEN: ${{ secrets.JFROG_BASE64_TOKEN }}
          JFROG_URL: ${{ secrets.JFROG_URL }}
          JFROG_USER: ${{ secrets.JFROG_USER }}
          BASE: ${{ env.VALIDATED_BASE }}
          PR_NUMBER: ${{ github.event.number }}

      - name: comment published Artifacts on PR
        uses: thollander/actions-comment-pull-request@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file-path: githubCommentsForPR.txt
          comment-tag: published-artifacts
          mode: upsert
