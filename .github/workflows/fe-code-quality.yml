name: Frontend Code Quality Workflow

on: workflow_call

jobs:
  code-quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ 'test' ]
        jobIndex: [ 1, 2, 3,4 ]
      fail-fast: false # Ensure all jobs run even if one fails
    env:
      jobCount: 4
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 22.15.0
      - name: Cache Node Modules
        id: npm-cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Formatter
        run: npx nx format:check --base=origin/${{ github.event.pull_request.base.ref }}

      - name: Linter
        run: npx nx affected --target=lint --parallel --configuration=dev --base=origin/${{ github.event.pull_request.base.ref }}

      - name: Fetch base branch
        run: git fetch origin ${{ github.event.pull_request.base.ref }}:${{ github.event.pull_request.base.ref }} || true

      - name: Unit Tests
        uses: collaborationFactory/github-actions/.github/actions/run-many@poc/code-coverage-in-code-quality-pr-pipeline
        with:
          target: ${{ matrix.target }}
          jobIndex: ${{ matrix.jobIndex }}
          jobCount: ${{ env.jobCount }}
          base: ${{ github.event.pull_request.base.ref }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Display structure of downloaded files
        run: find coverage/ -name "*.info"

      - name: Merge Coverage Reports
        run: mkdir -p merger-coverage && npx lcov-result-merger 'coverage/libs/**/lcov.info' 'merger-coverage/lcov-${{ matrix.jobIndex }}.info'
      - name: Display structure of merged files
        run: find merger-coverage/ -name "*.info"

      - name: Upload Coverage Reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports-${{ matrix.jobIndex }}
          path: |
            merger-coverage/
          retention-days: 7

  sonar:
    name: SonarCloud
    needs: code-quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: download coverage report
        uses: actions/download-artifact@v5
        with:
          path: merger-coverage/
          pattern: coverage-reports-*
          merge-multiple: true
      - name: Display structure of downloaded files
        run: find merger-coverage/ -name "*.info"
      - name: Merge matrix coverage reports
        run: mkdir -p coverage/overall && npx lcov-result-merger 'merger-coverage/**/lcov.info' 'coverage/overall/lcov.info'

      - name: Load environment variables
        uses: collaborationFactory/cplace-gh-workflows/.github/actions/load-env-variables@release/1.0
        with:
          secrets: ${{ toJson(secrets) }}
          vars: ${{ toJson(vars) }}
        env:
          REPO_NAME: '.'

      - name: Create sonar-project.properties
        id: sonar_generate_properties
        run: .github/scripts/sonar_generate_properties.sh
        env:
          REPO_NAME: ${{ github.event.repository.name }}
          SONAR_QUALITYGATE_TIMEOUT: ${{ env.CB_SONAR_QUALITYGATE_TIMEOUT }}
          SONAR_QUALITYGATE_WAIT: ${{ env.CB_SONAR_QUALITYGATE_WAIT }}
          SONAR_VERBOSE: ${{ env.CB_SONAR_VERBOSE }}
          SONAR_PROJECT_KEY: ${{ inputs.sq_project_key }}
          SONAR_UPDATE_BASE_LINE: ${{ inputs.sq_update_base_line }}

      - name: Dump sonar-project.properties
        run: cat sonar-project.properties

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ env.CB_SONAR_HOST_URL }}

      - name: Set baseline for sonar scan
        uses: collaborationFactory/cplace-gh-workflows/.github/actions/sonar-pin-baseline@release/1.0
        with:
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          sonar_host_url: ${{ env.CB_SONAR_HOST_URL }}
          project_key: ${{ env.PROJECT_KEY }}
          project_version: ${{ env.PROJECT_VERSION }}
