name: Frontend Code Quality Workflow

on:
  workflow_call:
    secrets:
      COVERAGE_THRESHOLDS:
        required: false

jobs:
  code-quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ 'test' ]
        jobIndex: [ 1, 2, 3, 4 ]
    env:
      jobCount: 4
      HAS_COVERAGE_THRESHOLDS: ${{ secrets.COVERAGE_THRESHOLDS != '' }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 18.19.1

      - name: Cache Node Modules
        id: npm-cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Formatter
        run: npx nx format:check --base=origin/${{ github.event.pull_request.base.ref }}

      - name: Linter
        run: npx nx affected --target=lint --parallel --configuration=dev --base=origin/${{ github.event.pull_request.base.ref }}

      - name: Unit Tests
        uses: collaborationFactory/github-actions/.github/actions/run-many@improvement/PFM-TASK-6308-Create-reusable-GHA-for-code-coverage-gate
        with:
          target: ${{ matrix.target }}
          jobIndex: ${{ matrix.jobIndex }}
          jobCount: ${{ env.jobCount }}
          base: ${{ github.event.pull_request.base.ref }}
          ref: ${{ github.event.pull_request.head.ref }}
        env:
          COVERAGE_THRESHOLDS: ${{ secrets.COVERAGE_THRESHOLDS }}

      - name: Upload Coverage Reports
        if: always() && matrix.jobIndex == 1 && env.HAS_COVERAGE_THRESHOLDS == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 7

      - name: Set Artifact URL
        if: github.event_name == 'pull_request' && always() && matrix.jobIndex == 1 && env.HAS_COVERAGE_THRESHOLDS == 'true'
        run: |
          echo "COVERAGE_ARTIFACT_URL=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV

      - name: Comment PR with Coverage Report
        if: github.event_name == 'pull_request' && always() && matrix.jobIndex == 1 && env.HAS_COVERAGE_THRESHOLDS == 'true'
        uses: thollander/actions-comment-pull-request@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file-path: 'coverage-report.txt'
          comment-tag: 'coverage-report'
          mode: upsert
