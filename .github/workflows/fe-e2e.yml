name: Frontend E2E Workflow

on:
  workflow_call:
    secrets:
      PERCY_TOKEN:
        required: false
    inputs:
      GHA_REF:
        type: string
        required: true
      GHA_BASE:
        type: string
        required: true

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    strategy:
      matrix:
        target: ['e2e']
        jobIndex: [1, 2, 3, 4]
    env:
      jobCount: 4
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ inputs.GHA_REF }}
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 14.16.1
      - name: Cache Node Modules
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install Cypress Binary
        run: npx cypress install

      - name: Affected Regression Tests
        uses: collaborationFactory/github-actions/.github/actions/run-many@release/23.1
        with:
          target: ${{ matrix.target }}
          jobIndex: ${{ matrix.jobIndex }}
          jobCount: ${{ env.jobCount }}
          base: ${{ inputs.GHA_BASE }}
          ref: ${{ inputs.GHA_REF }}
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          PERCY_PARTIAL_BUILD: 1
          DEV_STORIES: true
#  finalize-percy:
#    needs: e2e
#    runs-on: ubuntu-latest
#    timeout-minutes: 45
#    steps:
#      - name: Check Percy Token
#        id: percyToken
#        run: echo '::set-output name=value::${{secrets.PERCY_TOKEN}}'
#
#      - uses: actions/checkout@v2
#        if: steps.percyToken.outputs.value
#        with:
#          ref: ${{ inputs.GHA_REF }}
#          fetch-depth: 0
#
#      - uses: actions/setup-node@v1
#        if: steps.percyToken.outputs.value
#        with:
#          node-version: '14'
#
#      - name: Cache Node Modules
#        if: steps.percyToken.outputs.value
#        id: npm-cache
#        uses: actions/cache@v2
#        with:
#          path: '**/node_modules'
#          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
#
#      - name: Mark Percy Build as Finalized
#        if: steps.percyToken.outputs.value
#        run: ./node_modules/.bin/percy build:finalize
#        env:
#          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
